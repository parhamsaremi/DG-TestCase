name: CI

on: [push, pull_request]

jobs:
  conventions:
    name: Check style & commit msg conventions
    runs-on: ubuntu-22.04
    container:
      image: "ubuntu:22.04"

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: false
    - name: Install dependencies
      run: |
        apt update
        apt install --yes sudo
        sudo apt install --yes --no-install-recommends git npm
    # workaround for https://github.com/actions/runner/issues/2033
    - name: ownership workaround
      run: git config --global --add safe.directory '*'

    - name: Install .NET6
      run: |
        apt update && apt install --yes sudo
        sudo apt install --yes curl dotnet6
    - name: Check F# style with fantomless
      run: |
        dotnet new tool-manifest
        dotnet tool install fantomless-tool --version 4.7.996
        dotnet fantomless --recurse .
        git diff --exit-code
    - name: Check C# style with dotnet format
      run: |
        dotnet format whitespace ./src --folder
        git diff --exit-code
    - name: Check XAML style with prettier
      run: |
        sudo npm install --save-dev prettier @prettier/plugin-xml
        ./node_modules/.bin/prettier --xml-whitespace-sensitivity ignore --tab-width 4 --prose-wrap preserve --write '**/*.xaml'
        git diff --exit-code
    - name: Check if gitPush1by1 was used
      if: github.event_name == 'pull_request'
      run: dotnet fsi ./conventions/scripts/detectNotUsingGitPush1by1.fsx

  build-windows:
    name: (Windows) Build Android Frontend
    needs: conventions
    runs-on: windows-2022

    steps:

      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Install Maui workload
        run: dotnet workload install maui

      - name: Build Frontend (Android)
        run: dotnet build src\Frontend\Frontend.csproj --framework net7.0-android

  build-macOS:
    name: (macOS) Build+Test Android Frontend
    needs: conventions
    runs-on: macos-latest
    steps:

      # beware about using v2 because https://github.com/actions/checkout/issues/100
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Install Maui workload
        run: dotnet workload install maui

      - name: Build Frontend (Android)
        run: dotnet build src/Frontend/Frontend.csproj --framework net7.0-android
  
  build-linux-frontend-android:
    name: (Linux) Build Android Frontend
    needs: conventions
    runs-on: ubuntu-22.04
    steps:
      - name: Check for Secret availability
        id: secret-check
        # perform secret check & put boolean result as an output
        shell: bash
        run: |
          if [ "${{ secrets.KEYSTORE_PASSWORD }}" != '' ]; then
            echo "available=true" >> $GITHUB_OUTPUT;
          else
            echo "available=false" >> $GITHUB_OUTPUT;
          fi

      # beware about using v2 because https://github.com/actions/checkout/issues/100
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Install Maui workloads
        run: sudo dotnet workload install maui-android

      - name: Build Frontend (Android)
        run: |
          sudo dotnet build src/Frontend/Frontend.csproj \
            --framework net7.0-android \
            --configuration Debug \
            -p:AndroidSdkDirectory=/usr/local/lib/android/sdk \
            -p:AndroidOnly=true

      - name: Publish Frontend (Android)
        if: ${{ steps.secret-check.outputs.available == 'true' }}
        run: |
          sudo dotnet publish src/Frontend/Frontend.csproj \
            --framework net7.0-android \
            --configuration Release \
            -p:AndroidSdkDirectory=/usr/local/lib/android/sdk \
            -p:AndroidSigningKeyPass="${{ secrets.KEYSTORE_PASSWORD }}" \
            -p:AndroidSigningStorePass="${{ secrets.KEYSTORE_PASSWORD }}" \
            -p:AndroidOnly=true

      # Upload artifact fails with "permission denied" error without this
      - name: Fix permissions
        if: ${{ steps.secret-check.outputs.available == 'true' }}
        run: sudo chmod -R 755 src/Frontend/bin/Release/net7.0-android/publish

      - uses: actions/upload-artifact@v3
        if: ${{ steps.secret-check.outputs.available == 'true' }}
        with:
          name: publishedPackages
          path: src/Frontend/bin/Release/net7.0-android/publish
